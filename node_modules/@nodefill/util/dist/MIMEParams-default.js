"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
const encodeMIMEComponent_js_1 = __importDefault(require("./lib/encodeMIMEComponent.js"));
module.exports = class MIMEParams {
    #data = new Map();
    has(name) {
        return this.#data.has(name);
    }
    get(name) {
        return this.#data.get(name) ?? null;
    }
    set(name, value) {
        let match;
        if ((match = /[^!#$%&'*+\-.^_`|~A-Za-z0-9]/g.exec(name))) {
            throw new DOMException(`Invalid character in MIME parameter name: ${match[0]}`, "SyntaxError");
        }
        if ((match = /[^\t\u0020-~\u0080-\u00FF]/g.exec(value))) {
            throw new DOMException(`Invalid character in MIME parameter value: ${match[0]}`, "SyntaxError");
        }
        this.#data.set(name, value);
    }
    delete(name) {
        this.#data.delete(name);
    }
    entries() {
        return this.#data.entries();
    }
    [Symbol.iterator]() {
        return this.#data[Symbol.iterator]();
    }
    keys() {
        return this.#data.keys();
    }
    values() {
        return this.#data.values();
    }
    toString() {
        return [...this.#data]
            .map(([key, value]) => `${key}=${(0, encodeMIMEComponent_js_1.default)(value)}`)
            .join(";");
    }
    toJSON() {
        return this.toString();
    }
};
